<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List
    	java.util.Map
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode) codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    boolean cleanupByWorkItem = "true".equals(ElementParameterParser.getValue(node, "__CLEANUP_BY_WORKITEM__"));
    boolean closeConnection = "true".equals(ElementParameterParser.getValue(node, "__CLOSE_CONNECTION__"));
    boolean enableOkHashCheck = "true".equals(ElementParameterParser.getValue(node, "__CHECK_ALL_COMPONENTS_FINISHED__"));
%>
	// extract return codes and messages from globalMap
	errorCode = <%=cid%>.retrieveJobReturn(globalMap, errorCode);
	if (<%=cid%>.getReturnMessage() != null) {
		globalMap.put("<%=cid%>_RETURN_MESSAGE", <%=cid%>.getReturnMessage());
	}
	int <%=cid%>_returnCode = <%=cid%>.getReturnCode();
<% if (enableOkHashCheck) { %>
	if (<%=cid%>_returnCode == 0) {
		// check if we miss a failure
		for (java.util.Map.Entry<String, Boolean> okHashEntry : ok_Hash.entrySet()) {
			if (okHashEntry.getValue() == false && okHashEntry.getKey().equals("<%=cid%>") == false) {
				<%=cid%>_returnCode = 1; // default error code for failed sub jobs
				<%=cid%>.setReturnCode(<%=cid%>_returnCode);
				if (<%=cid%>.getReturnMessage() == null || <%=cid%>.getReturnMessage().isEmpty()) {
					<%=cid%>.setReturnMessage("Error in component " + okHashEntry.getKey());
				}
				break;
			}	
		}
	}
<% } %>
	globalMap.put("<%=cid%>_RETURN_CODE", <%=cid%>_returnCode);
	try {
		<%=cid%>.updateEntry();
<%  if (cleanupByWorkItem) { %>
		// cleanup previous job instances with the same work item
		globalMap.put("<%=cid%>_DELETED_PREVIOUS_JOB_INSTANCES", <%=cid%>.cleanupByWorkItem());
<%  } %>
   <%=cid%>.closeDbAppender();
   globalMap.remove("<%=cid%>_DB_APPENDER");
	// close all other known appenders in this job
	for (java.util.Map.Entry<String, Object> entry : globalMap.entrySet()) {
		if (entry.getKey().endsWith("_APPENDER")) {
			Object object = entry.getValue();
			if (object instanceof org.apache.log4j.Appender) {
				// detach appender
				org.apache.log4j.Logger.getLogger("talend").removeAppender((org.apache.log4j.Appender) object);
				try {
					// close appender
					((org.apache.log4j.Appender) object).close();
				} catch (Throwable t) {
					// ignore errors
				}
			}
		}
	}
<%  if (closeConnection) { %>
		<%=cid%>.closeConnection();
<%  } %>
	} catch (Exception e) {
		globalMap.put("<%=cid%>_ERROR_MESSAGE", e.getMessage());
		throw e;
	}
	
	